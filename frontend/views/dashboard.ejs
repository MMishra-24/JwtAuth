<%- include('layout.ejs'); %>
<div class="container">
    <div id="movies-container" class="container-fluid justify-content-center">
        <h2>List of Movies</h2>  &nbsp;
        <button id="add-movie-button">Add New Movie</button>
        
        <div class="row justify-content-center">
            <table class="row justify-content-center">
                <thead>
                  <tr>
                    <th>Movie Name</th>
                    <th>Rating</th>
                    <th>Cast</th>
                    <th>Genre</th>
                    <th>Release Date</th>
                    <th>Actions</th>
                  </tr>
                </thead>
                <tbody id="movie-list">
                  <!-- Add New Movie Form -->
                  <tr class="add-form"  style="display: none;">
                    <td>
                        <input type="text" name="newName" placeholder="Movie Name">
                    </td>
                    <td>
                        <input type="decimal" name="newRating" placeholder="Rating">
                    </td>
                    <td>
                        <input type="text" name="newCast" placeholder="Cast (comma-separated)">
                    </td>
                    <td>
                        <input type="text" name="newGenre" placeholder="Genre">
                    </td>
                    <td>
                        <input type="date" name="newReleaseDate" placeholder="Release Date">
                    </td>
                    <td>
                        <!-- Submit New Entry Button -->
                        <button class="add-button">Add</button>
                    </td>
                    </tr>
              <% movies.forEach((movie) => { %>
                <tr>
                  <td><%= movie.name %></td>
                  <td><%= movie.rating %></td>
                  <td><%= movie.cast.join(', ') %></td>
                  <td><%= movie.genre %></td>
                  <td><%= movie.releaseDate.toDateString() %></td>
                  <td>
                    <!-- Edit Movie Button - Opens Edit Form -->
                    <button class="edit-button" data-id="<%= movie.id %>">Edit</button>
                    
                    <!-- Delete Movie Button - Sends Delete Request -->
                    <form method="DELETE" action="/movies/delete/<%= movie.id %>" style="display: inline;">
                      <button class="delete-button" type="submit">Delete</button>
                    </form>
                  </td>
                </tr>

                <!-- Edit Movie Form (Initially Hidden) -->
                <tr class="edit-form" data-id="<%= movie.id %>" style="display: none;">
                  <td>
                    <input type="text" name="name" value="<%= movie.name %>">
                  </td>
                  <td>
                    <input type="decimal" name="rating" value="<%= movie.rating %>">
                  </td>
                  <td>
                    <input type="text" name="cast" value="<%= movie.movieCast.join(', ') %>">
                  </td>
                  <td>
                    <input type="text" name="genre" value="<%= movie.genre %>">
                  </td>
                  <td>
                    <input type="date" name="releaseDate" value="<%= movie.releaseDate.toISOString().slice(0, 10) %>">
                  </td>
                  <td>
                    <!-- Submit Edit Form Button -->
                    <button class="save-button" data-id="<%= movie.id %>">Save</button>
                    <!-- Cancel Edit Form Button -->
                    <button class="cancel-button" data-id="<%= movie.id %>">Cancel</button>
                  </td>
                </tr>
              <% }); %>
            </tbody>
                </tbody>
                    
              </table>
        </div>
      </div>
</div>
<div>
    <a href="/logout"> <button type="submit" class="btn btn-primary btn-lg btn-block login-button">Logout</button> </a>
</div>
</body>
</html>


  
<script>
  (async () => {
      // JavaScript to handle showing/hiding edit forms
      const editButtons = document.querySelectorAll('.edit-button');
      const saveButtons = document.querySelectorAll('.save-button');
      const cancelButtons = document.querySelectorAll('.cancel-button');
      const editForms = document.querySelectorAll('.edit-form');
      const addMovieButton = document.getElementById('add-movie-button');
      const addForm = document.querySelector('.add-form');
      const addButton = document.querySelector('.add-button');

      const updateAddMovieRow = () => {
        const row = document.createElement('tr');
        row.innerHTML = `
  <td><input type="text" name="newName" placeholder="Movie Name"></td>
  <td><input type="decimal" name="newRating" placeholder="Rating"></td>
  <td><input type="text" name="newCast" placeholder="Cast (comma-separated)"></td>
  <td><input type="text" name="newGenre" placeholder="Genre"></td>
  <td><input type="date" name="newReleaseDate" placeholder="Release Date"></td>
  <td><button class="add-button">Add</button></td>
`;

        return row;
              
      }

      const addEditMovieFormRow = () => {
        const row = document.createElement('tr');
        row.innerHTML = `<!-- Edit Movie Form (Initially Hidden) -->
                <tr class="edit-form" data-id="<%= ${movie.id} %>" style="display: none;">
                  <td>
                    <input type="text" name="name" value="<%= ${movie.name} %>">
                  </td>
                  <td>
                    <input type="decimal" name="rating" value="<%= ${movie.rating} %>">
                  </td>
                  <td>
                    <input type="text" name="cast" value="<%= ${movie.movieCast.join(', ')} %>">
                  </td>
                  <td>
                    <input type="text" name="genre" value="<%= ${movie.genre} %>">
                  </td>
                  <td>
                    <input type="date" name="releaseDate" value="<%= ${movie.releaseDate.toISOString().slice(0, 10)} %>">
                  </td>
                  <td>
                    <!-- Submit Edit Form Button -->
                    <button class="save-button" data-id="<%= ${movie.id} %>">Save</button>
                    <!-- Cancel Edit Form Button -->
                    <button class="cancel-button" data-id="<%= ${movie.id} %>">Cancel</button>
                  </td>
                </tr>`;
                return row;
      }

      const updateMoviesList = (movies) => {
        const movieList = document.getElementById('movie-list');

        // Clear existing rows
        movieList.innerHTML = '';

        // Insert movie data into the table
        movieList.append(updateAddMovieRow());
        movies.forEach(movie => {
            const row = document.createElement('tr');
            row.innerHTML = `
                <td>${movie.name}</td>
                <td>${movie.rating}</td>
                <td>${movie.cast.join(', ')}</td>
                <td>${movie.genre}</td>
                <td>${new Date(movie.releaseDate).toDateString()}</td>
                <td>
                    <!-- Edit Movie Button - Opens Edit Form -->
                    <button class="edit-button" data-id="${movie.id}">Edit</button>

                    <!-- Delete Movie Button - Sends Delete Request -->
                    <form method="DELETE" action="/movies/delete/${movie.id}" style="display: inline;">
                        <button class="delete-button" type="submit">Delete</button>
                    </form>
                </td>
            `;
            movieList.appendChild(row);
        });
        movieList.append(addEditMovieFormRow());
      }

      try {
          const token = localStorage.getItem('token');
          const response = await fetch('http://localhost:4111/movie', {
              method: 'GET',
              headers: {
                  'Content-Type': 'application/json',
                  'Authorization': token
              },
          });
          console.log("dashboard");
          console.log(response.status, response.statusText)
          if (response.ok) {
              const data = await response.json();
              // Redirect to the dashboard
              movies = data.movies;
              await updateMoviesList(movies);
          } else if (response.status === 401) {
              // Display the alert
              res.render('login');
          }
      } catch (error) {
          console.error('An error occurred:', error);
      }

      addMovieButton.addEventListener('click', async () => {
          const form = addForm;
          form.style.display = form.style.display === 'none' ? 'table-row' : 'none';
      });

      addButton.addEventListener('click', async () => {
          try {
              const newName = document.querySelector('input[name="newName"]').value;
              const newRating = document.querySelector('input[name="newRating"]').value;
              const newCast = document.querySelector('input[name="newCast"]').value;
              const newGenre = document.querySelector('input[name="newGenre"]').value;
              const newReleaseDate = document.querySelector('input[name="newReleaseDate"]').value;

              // Create a movie object with the form data
              const newMovie = {
                  name: newName,
                  rating: newRating,
                  cast: newCast.split(',').map((actor) => actor.trim()), // Convert to an array
                  genre: newGenre,
                  releaseDate: newReleaseDate,
              };

              // Make a POST request to your API endpoint
              const response = await fetch('http://localhost:4111/movie', {
                  method: 'POST',
                  headers: {
                      'Content-Type': 'application/json',
                      'Authorization': localStorage.getItem('token'),
                  },
                  body: JSON.stringify(newMovie),
              });

              if (response.ok) {
                  // Movie added successfully, handle the response as needed
                  // For example, you can reload the page to see the updated movie list
                  window.location.href="http://localhost:4111/dashboard";
              } else {
                  // Handle the error response here
                  console.error('Failed to add the movie.');
              }
          } catch (error) {
              console.error(error);
          }
      });

      editButtons.forEach((button) => {
          button.addEventListener('click', () => {
              const movieId = button.getAttribute('data-id');
              toggleEditForm(movieId);
          });
      });

      cancelButtons.forEach((button) => {
          button.addEventListener('click', () => {
              const movieId = button.getAttribute('data-id');
              toggleEditForm(movieId);
          });
      });

      function toggleEditForm(movieId) {
          const form = document.querySelector(`.edit-form[data-id="${movieId}"]`);
          form.style.display = form.style.display === 'none' ? 'table-row' : 'none';
      }
  })();
</script>